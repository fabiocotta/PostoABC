unit PerfilVendaDAO;
interface
uses
  Data.SqlExpr, SysUtils, Forms, Windows,  PerfilVenda,
   FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Comp.Client;
type
  TConfiguracaoDAO = class
  private
    { private declarations }
  public
    function ObterConfiguracao:TPerfilVenda;
    procedure Salvar(Configuracao: TPerfilVenda);
  end;
implementation
{ TConfiguracaoDAO }

uses untUtil;
function TConfiguracaoDAO.ObterConfiguracao: TPerfilVenda;
var
  Query: TFDQuery;
  Configuracao: TPerfilVenda;
begin
  try
    TUtil.CriarQuery(Query);
    Query.SQL.Add('SELECT c.Id');
    Query.SQL.Add('      ,c.ValorLitroGasolina');
    Query.SQL.Add('      ,c.ValorLitroOleoDiesel');
    Query.SQL.Add('      ,c.ValorImposto');
    Query.SQL.Add('  FROM Configuracao c');
    Query.SQL.Add(' WHERE c.Id = 1');
    Query.Open();
    if not(Query.IsEmpty) then
    begin
      Configuracao := TPerfilVenda.Create;
      Configuracao.Id := Query.FieldByName('Id').AsInteger;
      Configuracao.ValorLitroGasolina := Query.FieldByName('ValorLitroGasolina').AsCurrency;
      Configuracao.ValorLitroOleoDiesel := Query.FieldByName('ValorLitroOleoDiesel').AsCurrency;
      Configuracao.ValorImposto := Query.FieldByName('ValorImposto').AsCurrency;
      Result := Configuracao;
    end
    else
    begin
      Result := nil;
    end;
    TUtil.DestruirQuery(Query);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
procedure TPerfilVendaDAO.Salvar(PerfilVenda: TPerfilVenda);
var
  Query: TFDQuery;
begin
  try
    TUtil.CriarQuery(Query);
    Query.SQL.Add('UPDATE PerfilVenda');
    Query.SQL.Add('   SET Vl_LitroGasolina = :Vl_LitroGasolina');
    Query.SQL.Add('      ,Vl_LitroDiesel = :Vl_LitroDiesel');
    Query.SQL.Add('      ,Vl_Imposto = :Vl_Imposto');
    Query.SQL.Add(' WHERE Id_PerfilVenda = 1');
    Query.ParamByName('Vl_LitroGasolina').AsCurrency := PerfilVenda.Vl_LitroGasolina;
    Query.ParamByName('Vl_LitroDiesel').AsCurrency := PerfilVenda.Vl_LitroDiesel;
    Query.ParamByName('Vl_Imposto').AsCurrency := PerfilVenda.Vl_Imposto;
    Query.ExecSQL();
    TUtil.DestruirQuery(Query);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
end.
