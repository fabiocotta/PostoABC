unit TanqueBO;
interface
uses
  Data.SqlExpr, SysUtils, Forms, Windows, TanqueDAO, Tanque,
    FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Comp.Client;
type
  TTanqueBO = class
  private
    { private declarations }
  public
    function ObterListaTanques(Descricao: String = ''):TFDQuery;
    function ObterTanquePorId(Id :Integer):TTanque;
    function UltimoTanque:TTanque;
    procedure Salvar(Tanque: TTAnque);
    procedure Excluir(Tanque: TTanque);
  end;
implementation
{ TTanqueBO }

uses untUtil;
procedure TTanqueBO.Excluir(Tanque: TTanque);
var
  TanqueDAO: TTanqueDAO;
begin
  try
    TanqueDAO := TTanqueDAO.Create;
    TanqueDAO.Excluir(Tanque);
    FreeAndNil(TanqueDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
function TTanqueBO.ObterListaTanques(Descricao: String = ''): TFDQuery;
var
  TanqueDAO: TTanqueDAO;
begin
  try
    TanqueDAO := TTanqueDAO.Create;
    Result := TanqueDAO.ObterListaTanques(Descricao);
    FreeAndNil(TanqueDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
function TTanqueBO.ObterTanquePorId(Id :Integer): TTanque;
var
  TanqueDAO: TTanqueDAO;
begin
  try
    TanqueDAO := TTanqueDAO.Create;
    Result := TanqueDAO.ObterTanquePorId(Id);
    FreeAndNil(TanqueDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
procedure TTanqueBO.Salvar(Tanque: TTAnque);
var
  TanqueDAO: TTanqueDAO;
begin
  try
    TanqueDAO := TTanqueDAO.Create;
    TanqueDAO.Salvar(Tanque);
    FreeAndNil(TanqueDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
function TTanqueBO.UltimoTanque: TTanque;
var
  TanqueDAO: TTanqueDAO;
begin
  try
    TanqueDAO := TTanqueDAO.Create;
    Result := TanqueDAO.UltimoTanque();
    FreeAndNil(TanqueDAO);
  except on E: Exception do
    begin
      raise Exception.Create(E.Message);
    end;
  end;
end;
end.
