unit UntPrincipal;

interface

uses
 { Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.Imaging.pngimage, System.Actions, Vcl.ActnList, System.ImageList,
  Vcl.ImgList, Data.DB, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids;   }



   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, Vcl.Grids, Vcl.DBGrids,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.Imaging.pngimage, Vcl.StdCtrls;


type
  TFrmPrincipal = class(TForm)
    pnlTopo: TPanel;
    pnlMenu: TPanel;
    pnlPrincipal: TPanel;
    pnlRodape: TPanel;
    pnlConteudo: TPanel;
    pnlLogo: TPanel;
    pnlLineMenu: TPanel;
    pnlUsuario: TPanel;
    pnlVersao: TPanel;
    pnlTitulo: TPanel;
    pnlDescricao: TPanel;
    pnlLineUsuario: TPanel;
    pnlImgUsuario: TPanel;
    imgUserBranco: TImage;
    pnlDadosUsuario: TPanel;
    lblUsuario: TLabel;
    lblPerfil: TLabel;
    pnlLicensciado: TPanel;
    pnlLineLicenciado: TPanel;
    pnlConteudoLicenciado: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    pnlSair: TPanel;
    pnlShapeMenu: TPanel;
    ShapeMenu: TShape;
    pnlDadosMenu: TPanel;
    btnBomba: TSpeedButton;
    btnTanque: TSpeedButton;
    btnMovimento: TSpeedButton;
    btnPerfilVenda: TSpeedButton;
    btnSair: TSpeedButton;
    lblTitulo: TLabel;
    lblDescricao: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Image1: TImage;
    SpeedButton1: TSpeedButton;
    procedure btnSairClick(Sender: TObject);
    procedure btnBombaClick(Sender: TObject);
    procedure btnTanqueClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnPerfilVendaClick(Sender: TObject);
    procedure btnMovimentoClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
  private
    { Private declarations }
    procedure GET_LineMenu(Sender: TObject);
  public
    { Public declarations }
  end;

var
  FrmPrincipal: TFrmPrincipal;

implementation

{$R *.dfm}

uses UntCadBomba, View.tanque, View.bomba , View.perfil,
  untDM, View.movimento, View.relatorio;

procedure TFrmPrincipal.btnTanqueClick(Sender: TObject);
begin
    GET_LineMenu(Sender);
    ViewTanque := TViewTanque.Create(Self);
    try
      ViewTanque.showmodal;

    finally
      FreeAndNil(ViewTanque);
    end;
end;

procedure TFrmPrincipal.btnBombaClick(Sender: TObject);
begin
    GET_LineMenu(Sender);
    ViewBomba := TViewBomba.Create(Self);
    try
      ViewBomba.ShowModal;

    finally
      FreeAndNil(ViewBomba);
    end;
end;

procedure TFrmPrincipal.btnMovimentoClick(Sender: TObject);
  var
   data1, data2:TDatetime;
begin
  try
    ViewRelatorio := TViewRelatorio.Create(Self);
    if ViewRelatorio.showmodal = mrok then
    begin
      data1 := strtodate(ViewRelatorio.editDataIni.text);
      data2 := strtodate(ViewRelatorio.editDataFim.text);
      if dm.dspRelatAbastecimento(data1, data2) = 0 then
         Application.MessageBox('Não há abastecimento registrado no período informado.','Aviso', + MB_ICONINFORMATION + mb_ok)
      else
      begin
        try
          ViewRelatorio := TViewRelatorio.Create(Self);
          ViewRelatorio.labPeriodo.Caption := ViewRelatorio.labPeriodo.Caption+ ' ' + datetostr(data1) +  ' a ' +  datetostr(data2);
          ViewRelatorio.RLReport1.Preview;
        finally
          ViewRelatorio.free;
        end;
       end;
    end;
  finally
      ViewRelatorio.free;
  end;

end;

procedure TFrmPrincipal.btnPerfilVendaClick(Sender: TObject);
begin
   GET_LineMenu(Sender);
    ViewPerfilVenda := TViewPerfilVenda.Create(Self);
    try
      ViewPerfilVenda.ShowModal;

    finally
      FreeAndNil(ViewPerfilVenda);
    end;
end;

procedure TFrmPrincipal.btnSairClick(Sender: TObject);
begin
  application.Terminate;
end;

procedure TFrmPrincipal.FormShow(Sender: TObject);
begin
    GET_LineMenu(btnBomba);
end;

procedure TFrmPrincipal.GET_LineMenu(Sender: TObject);
begin
  ShapeMenu.Left   := 0;
  ShapeMenu.Top    := 0;
  ShapeMenu.Height := TSpeedButton(Sender).Height;
  ShapeMenu.Top    := TSpeedButton(Sender).Top;
  pnlShapeMenu.Repaint;

end;

procedure TFrmPrincipal.SpeedButton1Click(Sender: TObject);
begin
    GET_LineMenu(Sender);
    ViewMovimento := TViewMovimento.Create(Self);
    try
      ViewMovimento.ShowModal;

    finally
      FreeAndNil(ViewMovimento);
    end;
end;

end.
